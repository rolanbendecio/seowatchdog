{
  "name": "SEO Watchdog - Complete Unified Workflow",
  "description": "Comprehensive SEO monitoring with batch processing, keyword prioritization, and Google Sheets integration",
  "version": "3.0",
  "nodes": [
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "cronExpression",
              "value": "0 9 * * *"
            }
          ]
        }
      },
      "id": "daily_scheduler",
      "name": "Daily Scheduler",
      "type": "n8n-nodes-base.cron",
      "typeVersion": 1,
      "position": [240, 400],
      "notes": "üïò DAILY SCHEDULER\n‚Ä¢ Triggers at 9 AM daily\n‚Ä¢ Initiates complete SEO analysis\n‚Ä¢ Batch processing enabled\n‚Ä¢ Keyword prioritization included"
    },
    {
      "parameters": {
        "jsCode": "// üéØ COMPREHENSIVE WORKFLOW CONFIGURATION\n// Master configuration for the entire SEO Watchdog workflow\n\nconst masterConfig = {\n  // üìä BATCH PROCESSING SETTINGS\n  batch_settings: {\n    performance_batch_size: 100,\n    keywords_batch_size: 50,\n    indexing_batch_size: 100,\n    tracked_keywords_limit: 200,\n    batch_delay: 2000,\n    query_timeout: 45000\n  },\n  \n  // üìÖ DATE RANGE CONFIGURATION\n  date_settings: {\n    max_days_back: 30,\n    analysis_date: new Date().toISOString().split('T')[0],\n    start_date: new Date(Date.now() - (30 * 24 * 60 * 60 * 1000)).toISOString().split('T')[0],\n    end_date: new Date(Date.now() - (24 * 60 * 60 * 1000)).toISOString().split('T')[0]\n  },\n  \n  // üéØ KEYWORD PRIORITY SCORING\n  priority_scoring: {\n    // Thresholds\n    high_impressions_threshold: 10000,\n    medium_impressions_threshold: 1000,\n    low_ctr_threshold: 2.0,\n    good_ctr_threshold: 5.0,\n    high_position_threshold: 3,\n    medium_position_threshold: 10,\n    low_position_threshold: 20,\n    min_clicks_threshold: 5,\n    \n    // Scoring weights (must total 1.0)\n    weights: {\n      impressions_weight: 0.3,\n      position_weight: 0.25,\n      ctr_weight: 0.2,\n      clicks_weight: 0.15,\n      trend_weight: 0.1\n    }\n  },\n  \n  // üîß PERFORMANCE SETTINGS\n  performance_settings: {\n    max_total_records: 1000,\n    priority_threshold: 1000,\n    enable_indexing_analysis: true,\n    enable_keyword_tracking: true,\n    enable_priority_scoring: true\n  },\n  \n  // üìä EXECUTION METADATA\n  execution_metadata: {\n    workflow_version: '3.0-complete',\n    execution_id: `seo_complete_${Date.now()}`,\n    start_time: new Date().toISOString(),\n    features_enabled: [\n      'batch_processing',\n      'keyword_prioritization', \n      'google_sheets_integration',\n      'performance_analysis',\n      'indexing_monitoring',\n      'ai_analysis',\n      'telegram_reporting'\n    ]\n  }\n};\n\nconsole.log('üöÄ SEO Watchdog Complete Workflow Initialized');\nconsole.log(`üìÖ Analysis Period: ${masterConfig.date_settings.start_date} to ${masterConfig.date_settings.end_date}`);\nconsole.log(`üî¢ Batch Sizes: Performance(${masterConfig.batch_settings.performance_batch_size}), Keywords(${masterConfig.batch_settings.keywords_batch_size})`);\nconsole.log(`üéØ Features: ${masterConfig.execution_metadata.features_enabled.join(', ')}`);\n\nreturn { json: masterConfig };"
      },
      "id": "master_config",
      "name": "Master Configuration",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [460, 400],
      "notes": "üéØ MASTER CONFIGURATION\n\nüìã COMPREHENSIVE SETTINGS:\n‚Ä¢ Batch processing limits\n‚Ä¢ Date range configuration\n‚Ä¢ Priority scoring weights\n‚Ä¢ Performance thresholds\n‚Ä¢ Feature toggles\n\nüîß CUSTOMIZATION:\n‚Ä¢ Adjust batch sizes\n‚Ä¢ Modify scoring weights\n‚Ä¢ Change date ranges\n‚Ä¢ Enable/disable features\n\n‚ö° OPTIMIZATION:\n‚Ä¢ Timeout prevention\n‚Ä¢ Memory management\n‚Ä¢ Performance tuning\n‚Ä¢ Error handling"
    },
    {
      "parameters": {
        "authentication": "serviceAccount",
        "documentId": "={{ $env.TRACKED_KEYWORDS_SHEET_ID }}",
        "sheetName": "Keywords",
        "range": "A:E",
        "options": {
          "headerRow": true
        }
      },
      "id": "load_tracked_keywords",
      "name": "Load Tracked Keywords",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4,
      "position": [680, 300],
      "notes": "üìä TRACKED KEYWORDS LOADER\n\nüìã GOOGLE SHEETS STRUCTURE:\n‚Ä¢ A: Keyword (required)\n‚Ä¢ B: Priority (High/Medium/Low)\n‚Ä¢ C: Target Position (1-20)\n‚Ä¢ D: Business Value (1-10)\n‚Ä¢ E: Notes (optional)\n\nüéØ PURPOSE:\n‚Ä¢ Load user-defined keywords\n‚Ä¢ Apply manual priorities\n‚Ä¢ Set optimization targets\n‚Ä¢ Track business importance\n\nüîß CONFIGURATION:\n‚Ä¢ Sheet ID: TRACKED_KEYWORDS_SHEET_ID\n‚Ä¢ Auto-header detection\n‚Ä¢ Error handling for missing data"
    },
    {
      "parameters": {
        "jsCode": "// üéØ KEYWORD PROCESSOR & VALIDATOR\n// Processes tracked keywords and creates BigQuery filters\n\ntry {\n  // üìä Extract and validate keywords\n  const keywordsData = $input.all() || [];\n  const masterConfig = $(\"Master Configuration\").first().json;\n  \n  // üõ°Ô∏è Clean and validate keyword data\n  const validKeywords = keywordsData\n    .filter(item => {\n      return item.json && \n             item.json.Keyword && \n             item.json.Keyword.trim() && \n             item.json.Keyword.trim().length > 0;\n    })\n    .map(item => {\n      const keyword = item.json.Keyword.trim().toLowerCase();\n      const priority = (item.json.Priority || 'Medium').toString().toLowerCase();\n      const targetPosition = parseInt(item.json['Target Position']) || 10;\n      const businessValue = parseInt(item.json['Business Value']) || 5;\n      const notes = (item.json.Notes || '').toString().trim();\n      \n      return {\n        keyword: keyword,\n        original_keyword: item.json.Keyword.trim(),\n        priority: priority,\n        target_position: Math.max(1, Math.min(20, targetPosition)),\n        business_value: Math.max(1, Math.min(10, businessValue)),\n        notes: notes,\n        manual_priority: true,\n        is_tracked: true\n      };\n    })\n    .slice(0, masterConfig.batch_settings.tracked_keywords_limit);\n  \n  // üéØ Create SQL-safe keyword filter\n  const keywordsList = validKeywords\n    .map(k => `'${k.keyword.replace(/'/g, \"''\")}'`)\n    .join(', ');\n  \n  // üìä Calculate priority distribution\n  const priorityDistribution = {\n    high: validKeywords.filter(k => k.priority === 'high').length,\n    medium: validKeywords.filter(k => k.priority === 'medium').length,\n    low: validKeywords.filter(k => k.priority === 'low').length\n  };\n  \n  // üìà Calculate business value distribution\n  const businessValueStats = {\n    high_value: validKeywords.filter(k => k.business_value >= 8).length,\n    medium_value: validKeywords.filter(k => k.business_value >= 5 && k.business_value < 8).length,\n    low_value: validKeywords.filter(k => k.business_value < 5).length,\n    average_value: validKeywords.length > 0 ? \n      validKeywords.reduce((sum, k) => sum + k.business_value, 0) / validKeywords.length : 0\n  };\n  \n  // üéØ Processed keyword data\n  const processedKeywordData = {\n    tracked_keywords: validKeywords,\n    keywords_list: keywordsList,\n    total_keywords: validKeywords.length,\n    \n    // üìä STATISTICS\n    priority_distribution: priorityDistribution,\n    business_value_stats: businessValueStats,\n    \n    // üîç QUERY FILTERS\n    keywords_query_filter: validKeywords.length > 0 ? \n      `AND LOWER(query) IN (${keywordsList})` : '',\n    has_tracked_keywords: validKeywords.length > 0,\n    \n    // ‚úÖ PROCESSING STATUS\n    processing_status: {\n      success: true,\n      keywords_loaded: validKeywords.length,\n      keywords_truncated: keywordsData.length > masterConfig.batch_settings.tracked_keywords_limit,\n      original_count: keywordsData.length,\n      valid_count: validKeywords.length\n    }\n  };\n  \n  console.log(`‚úÖ Keywords Processed Successfully:`);\n  console.log(`üìä Total Keywords: ${validKeywords.length}`);\n  console.log(`üéØ Priority Distribution: High(${priorityDistribution.high}), Medium(${priorityDistribution.medium}), Low(${priorityDistribution.low})`);\n  console.log(`üíº Avg Business Value: ${businessValueStats.average_value.toFixed(1)}/10`);\n  \n  return { json: processedKeywordData };\n  \n} catch (error) {\n  console.error('‚ùå Keyword Processing Error:', error.message);\n  \n  return {\n    json: {\n      tracked_keywords: [],\n      keywords_list: '',\n      total_keywords: 0,\n      priority_distribution: { high: 0, medium: 0, low: 0 },\n      business_value_stats: { high_value: 0, medium_value: 0, low_value: 0, average_value: 0 },\n      keywords_query_filter: '',\n      has_tracked_keywords: false,\n      processing_status: {\n        success: false,\n        keywords_loaded: 0,\n        keywords_truncated: false,\n        original_count: 0,\n        valid_count: 0,\n        error: error.message\n      }\n    }\n  };\n}"
      },
      "id": "process_keywords",
      "name": "Process Keywords",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [900, 300],
      "notes": "üéØ KEYWORD PROCESSOR\n\nüìä PROCESSING FEATURES:\n‚Ä¢ Validates & cleans keywords\n‚Ä¢ Creates SQL-safe filters\n‚Ä¢ Calculates distributions\n‚Ä¢ Handles business values\n‚Ä¢ Enforces batch limits\n\nüõ°Ô∏è DATA VALIDATION:\n‚Ä¢ Removes empty/invalid entries\n‚Ä¢ Sanitizes SQL inputs\n‚Ä¢ Validates ranges\n‚Ä¢ Error handling\n\nüìà STATISTICS:\n‚Ä¢ Priority distribution\n‚Ä¢ Business value analysis\n‚Ä¢ Processing metrics\n‚Ä¢ Quality indicators"
    },
    {
      "parameters": {
        "authentication": "serviceAccount",
        "projectId": "={{ $env.GCP_PROJECT_ID }}",
        "query": "-- üéØ COMPREHENSIVE KEYWORD PRIORITY ANALYSIS\n-- Advanced query combining tracked keywords with priority scoring\n\nWITH tracked_keyword_base AS (\n  SELECT \n    date,\n    query,\n    page,\n    device,\n    SUM(clicks) as daily_clicks,\n    SUM(impressions) as daily_impressions,\n    SAFE_DIVIDE(SUM(clicks), SUM(impressions)) * 100 as daily_ctr,\n    AVG(position) as daily_position,\n    DATE_TRUNC(date, WEEK) as week,\n    ROW_NUMBER() OVER (ORDER BY SUM(impressions) DESC, SUM(clicks) DESC) as priority_rank\n  FROM `{{ $env.GCP_PROJECT_ID }}.searchconsole.searchdata_site_impression`\n  WHERE \n    date >= '{{ $(\"Master Configuration\").first().json.date_settings.start_date }}'\n    AND date <= '{{ $(\"Master Configuration\").first().json.date_settings.end_date }}'\n    {{ $(\"Process Keywords\").first().json.keywords_query_filter || '' }}\n    AND impressions >= {{ $(\"Master Configuration\").first().json.priority_scoring.min_clicks_threshold }}\n  GROUP BY date, query, page, device, week\n  HAVING priority_rank <= {{ $(\"Master Configuration\").first().json.batch_settings.keywords_batch_size }}\n),\n\nkeyword_performance_metrics AS (\n  SELECT \n    query,\n    page,\n    SUM(daily_clicks) as total_clicks,\n    SUM(daily_impressions) as total_impressions,\n    SAFE_DIVIDE(SUM(daily_clicks), SUM(daily_impressions)) * 100 as avg_ctr,\n    AVG(daily_position) as avg_position,\n    COUNT(DISTINCT date) as days_with_data,\n    STDDEV(daily_position) as position_volatility,\n    \n    -- üìä VOLUME CLASSIFICATION\n    CASE \n      WHEN SUM(daily_impressions) >= {{ $(\"Master Configuration\").first().json.priority_scoring.high_impressions_threshold }} THEN 'HIGH_VOLUME'\n      WHEN SUM(daily_impressions) >= {{ $(\"Master Configuration\").first().json.priority_scoring.medium_impressions_threshold }} THEN 'MEDIUM_VOLUME'\n      ELSE 'LOW_VOLUME'\n    END as volume_tier,\n    \n    -- üéØ POSITION CLASSIFICATION\n    CASE \n      WHEN AVG(daily_position) <= {{ $(\"Master Configuration\").first().json.priority_scoring.high_position_threshold }} THEN 'TOP_3'\n      WHEN AVG(daily_position) <= {{ $(\"Master Configuration\").first().json.priority_scoring.medium_position_threshold }} THEN 'TOP_10'\n      WHEN AVG(daily_position) <= {{ $(\"Master Configuration\").first().json.priority_scoring.low_position_threshold }} THEN 'TOP_20'\n      ELSE 'BELOW_20'\n    END as position_tier,\n    \n    -- üìà CTR CLASSIFICATION\n    CASE \n      WHEN SAFE_DIVIDE(SUM(daily_clicks), SUM(daily_impressions)) * 100 >= {{ $(\"Master Configuration\").first().json.priority_scoring.good_ctr_threshold }} THEN 'GOOD_CTR'\n      WHEN SAFE_DIVIDE(SUM(daily_clicks), SUM(daily_impressions)) * 100 <= {{ $(\"Master Configuration\").first().json.priority_scoring.low_ctr_threshold }} THEN 'LOW_CTR'\n      ELSE 'AVERAGE_CTR'\n    END as ctr_tier\n  FROM tracked_keyword_base\n  GROUP BY query, page\n),\n\nweekly_trend_analysis AS (\n  SELECT \n    query,\n    page,\n    week,\n    SUM(daily_clicks) as weekly_clicks,\n    SUM(daily_impressions) as weekly_impressions,\n    AVG(daily_position) as weekly_avg_position,\n    LAG(SUM(daily_clicks), 1) OVER (PARTITION BY query, page ORDER BY week) as prev_week_clicks,\n    LAG(AVG(daily_position), 1) OVER (PARTITION BY query, page ORDER BY week) as prev_week_position\n  FROM tracked_keyword_base\n  GROUP BY query, page, week\n),\n\nlatest_trends AS (\n  SELECT \n    query,\n    page,\n    COALESCE(\n      SAFE_DIVIDE(\n        weekly_clicks - prev_week_clicks,\n        NULLIF(prev_week_clicks, 0)\n      ) * 100, \n      0\n    ) as clicks_change_percent,\n    COALESCE(weekly_avg_position - prev_week_position, 0) as position_change\n  FROM weekly_trend_analysis\n  WHERE week = (\n    SELECT MAX(week) \n    FROM weekly_trend_analysis wta2 \n    WHERE wta2.query = weekly_trend_analysis.query \n    AND wta2.page = weekly_trend_analysis.page\n  )\n),\n\n-- üéØ COMPREHENSIVE PRIORITY SCORING\nkeyword_priority_scores AS (\n  SELECT \n    kpm.*,\n    lt.clicks_change_percent,\n    lt.position_change,\n    \n    -- üìä CALCULATE WEIGHTED PRIORITY SCORE (0-100)\n    ROUND(\n      -- Volume component (30%)\n      (CASE \n        WHEN kpm.volume_tier = 'HIGH_VOLUME' THEN 30\n        WHEN kpm.volume_tier = 'MEDIUM_VOLUME' THEN 20\n        ELSE 10\n      END) +\n      \n      -- Position component (25%) - better position = higher score\n      (CASE \n        WHEN kpm.position_tier = 'TOP_3' THEN 25\n        WHEN kpm.position_tier = 'TOP_10' THEN 20\n        WHEN kpm.position_tier = 'TOP_20' THEN 15\n        ELSE 5\n      END) +\n      \n      -- CTR component (20%)\n      (CASE \n        WHEN kpm.ctr_tier = 'GOOD_CTR' THEN 20\n        WHEN kpm.ctr_tier = 'AVERAGE_CTR' THEN 15\n        WHEN kpm.ctr_tier = 'LOW_CTR' THEN 5\n        ELSE 10\n      END) +\n      \n      -- Traffic component (15%)\n      (CASE \n        WHEN kpm.total_clicks >= 100 THEN 15\n        WHEN kpm.total_clicks >= 20 THEN 12\n        WHEN kpm.total_clicks >= 5 THEN 8\n        ELSE 3\n      END) +\n      \n      -- Trend component (10%)\n      (CASE \n        WHEN COALESCE(lt.clicks_change_percent, 0) > 50 THEN 10\n        WHEN COALESCE(lt.clicks_change_percent, 0) > 20 THEN 8\n        WHEN COALESCE(lt.clicks_change_percent, 0) > 0 THEN 6\n        WHEN COALESCE(lt.clicks_change_percent, 0) > -20 THEN 4\n        ELSE 1\n      END)\n    ) as priority_score,\n    \n    -- üéØ OPPORTUNITY CLASSIFICATION\n    CASE \n      WHEN kpm.avg_position BETWEEN 4 AND 10 AND kpm.total_impressions > 1000 THEN 'POSITION_OPPORTUNITY'\n      WHEN kpm.avg_ctr < {{ $(\"Master Configuration\").first().json.priority_scoring.low_ctr_threshold }} AND kmp.total_impressions > 500 THEN 'CTR_OPPORTUNITY'\n      WHEN kmp.avg_position BETWEEN 11 AND 20 AND kmp.total_impressions > 200 THEN 'VISIBILITY_OPPORTUNITY'\n      WHEN COALESCE(lt.clicks_change_percent, 0) < -30 THEN 'DECLINING_KEYWORD'\n      WHEN kmp.total_impressions > {{ $(\"Master Configuration\").first().json.priority_scoring.high_impressions_threshold }} THEN 'HIGH_VALUE_MONITOR'\n      WHEN kmp.position_volatility > 5 THEN 'UNSTABLE_RANKING'\n      ELSE 'STANDARD_TRACKING'\n    END as opportunity_type,\n    \n    -- üìä KEYWORD HEALTH SCORE\n    CASE\n      WHEN kmp.avg_position <= 3 AND kmp.avg_ctr >= 5 AND COALESCE(lt.clicks_change_percent, 0) >= 0 THEN 'EXCELLENT'\n      WHEN kmp.avg_position <= 10 AND kmp.avg_ctr >= 2 AND COALESCE(lt.clicks_change_percent, 0) >= -10 THEN 'GOOD'\n      WHEN kmp.avg_position <= 20 AND kmp.avg_ctr >= 1 THEN 'FAIR'\n      ELSE 'NEEDS_ATTENTION'\n    END as keyword_health\n    \n  FROM keyword_performance_metrics kpm\n  LEFT JOIN latest_trends lt ON kpm.query = lt.query AND kpm.page = lt.page\n)\n\n-- üèÜ FINAL PRIORITIZED RESULTS\nSELECT \n  query,\n  page,\n  total_clicks,\n  total_impressions,\n  ROUND(avg_ctr, 2) as avg_ctr,\n  ROUND(avg_position, 1) as avg_position,\n  days_with_data,\n  ROUND(position_volatility, 2) as position_volatility,\n  volume_tier,\n  position_tier,\n  ctr_tier,\n  ROUND(clicks_change_percent, 1) as trend_percent,\n  ROUND(position_change, 1) as position_change,\n  priority_score,\n  opportunity_type,\n  keyword_health,\n  \n  -- üèÜ FINAL PRIORITY CLASSIFICATION\n  CASE \n    WHEN priority_score >= 85 THEN 'CRITICAL'\n    WHEN priority_score >= 70 THEN 'HIGH'\n    WHEN priority_score >= 50 THEN 'MEDIUM'\n    ELSE 'LOW'\n  END as final_priority,\n  \n  -- üìÖ METADATA\n  '{{ $(\"Master Configuration\").first().json.date_settings.analysis_date }}' as analysis_date\n  \nFROM keyword_priority_scores\nORDER BY priority_score DESC, total_impressions DESC\nLIMIT {{ $(\"Master Configuration\").first().json.batch_settings.keywords_batch_size }}"
      },
      "id": "keyword_priority_analysis",
      "name": "Keyword Priority Analysis",
      "type": "n8n-nodes-base.googleBigQuery",
      "typeVersion": 1,
      "position": [1120, 200],
      "notes": "üéØ KEYWORD PRIORITY ANALYSIS\n\nüèÜ ADVANCED SCORING (0-100):\n‚Ä¢ Volume (30%): Impression-based scoring\n‚Ä¢ Position (25%): Ranking performance\n‚Ä¢ CTR (20%): Click-through efficiency\n‚Ä¢ Traffic (15%): Actual click volume\n‚Ä¢ Trend (10%): Performance momentum\n\nüìä CLASSIFICATIONS:\n‚Ä¢ CRITICAL (85-100): Urgent attention\n‚Ä¢ HIGH (70-84): High impact potential\n‚Ä¢ MEDIUM (50-69): Standard optimization\n‚Ä¢ LOW (0-49): Monitor only\n\nüéØ OPPORTUNITY TYPES:\n‚Ä¢ POSITION_OPPORTUNITY: Rankings 4-10\n‚Ä¢ CTR_OPPORTUNITY: Low CTR optimization\n‚Ä¢ VISIBILITY_OPPORTUNITY: Rankings 11-20\n‚Ä¢ DECLINING_KEYWORD: Performance drops\n‚Ä¢ HIGH_VALUE_MONITOR: Volume tracking\n‚Ä¢ UNSTABLE_RANKING: Volatility issues\n\nüìà HEALTH INDICATORS:\n‚Ä¢ EXCELLENT: Top performance\n‚Ä¢ GOOD: Strong performance\n‚Ä¢ FAIR: Adequate performance\n‚Ä¢ NEEDS_ATTENTION: Issues detected"
    },
    {
      "parameters": {
        "authentication": "serviceAccount",
        "projectId": "={{ $env.GCP_PROJECT_ID }}",
        "query": "-- üìä ENHANCED PERFORMANCE DATA WITH KEYWORD CONTEXT\n-- Comprehensive site performance analysis with tracked keyword awareness\n\nWITH recent_performance_data AS (\n  SELECT \n    date,\n    page,\n    query,\n    clicks,\n    impressions,\n    SAFE_DIVIDE(clicks, impressions) * 100 as ctr,\n    position,\n    device,\n    -- üéØ Mark tracked keywords\n    CASE \n      WHEN {{ $(\"Process Keywords\").first().json.has_tracked_keywords || false }} = true\n           {{ $(\"Process Keywords\").first().json.keywords_query_filter || '' }}\n      THEN true\n      ELSE false\n    END as is_tracked_keyword,\n    ROW_NUMBER() OVER (ORDER BY impressions DESC, clicks DESC) as performance_rank\n  FROM `{{ $env.GCP_PROJECT_ID }}.searchconsole.searchdata_site_impression`\n  WHERE \n    date >= '{{ $(\"Master Configuration\").first().json.date_settings.start_date }}'\n    AND date <= '{{ $(\"Master Configuration\").first().json.date_settings.end_date }}'\n    AND impressions >= {{ $(\"Master Configuration\").first().json.priority_scoring.min_clicks_threshold }}\n  HAVING performance_rank <= {{ $(\"Master Configuration\").first().json.performance_settings.max_total_records }}\n),\n\npage_performance_analysis AS (\n  SELECT \n    page,\n    SUM(clicks) as total_clicks,\n    SUM(impressions) as total_impressions,\n    SAFE_DIVIDE(SUM(clicks), SUM(impressions)) * 100 as avg_ctr,\n    AVG(position) as avg_position,\n    COUNT(DISTINCT query) as total_keywords,\n    COUNT(DISTINCT CASE WHEN is_tracked_keyword THEN query END) as tracked_keywords_count,\n    MAX(date) as last_data_date,\n    DATE_DIFF(CURRENT_DATE(), MAX(date), DAY) as days_since_last_data,\n    \n    -- üìä PERFORMANCE METRICS\n    SUM(CASE WHEN is_tracked_keyword THEN clicks ELSE 0 END) as tracked_clicks,\n    SUM(CASE WHEN is_tracked_keyword THEN impressions ELSE 0 END) as tracked_impressions,\n    \n    -- üéØ PAGE CLASSIFICATION\n    CASE\n      WHEN COUNT(DISTINCT CASE WHEN is_tracked_keyword THEN query END) > 0 THEN 'TRACKED_PAGE'\n      ELSE 'ORGANIC_PAGE'\n    END as page_type\n  FROM recent_performance_data\n  GROUP BY page\n),\n\nweekly_traffic_trends AS (\n  SELECT \n    page,\n    DATE_TRUNC(date, WEEK) as week,\n    SUM(clicks) as weekly_clicks,\n    SUM(impressions) as weekly_impressions,\n    AVG(position) as weekly_avg_position\n  FROM recent_performance_data\n  GROUP BY page, week\n),\n\nlatest_week_comparison AS (\n  SELECT \n    page,\n    weekly_clicks as current_week_clicks,\n    LAG(weekly_clicks, 1) OVER (PARTITION BY page ORDER BY week) as prev_week_clicks,\n    weekly_avg_position as current_week_position,\n    LAG(weekly_avg_position, 1) OVER (PARTITION BY page ORDER BY week) as prev_week_position,\n    SAFE_DIVIDE(\n      weekly_clicks - LAG(weekly_clicks, 1) OVER (PARTITION BY page ORDER BY week),\n      LAG(weekly_clicks, 1) OVER (PARTITION BY page ORDER BY week)\n    ) * 100 as clicks_change_percent,\n    weekly_avg_position - LAG(weekly_avg_position, 1) OVER (PARTITION BY page ORDER BY week) as position_change\n  FROM weekly_traffic_trends\n  WHERE week = DATE_TRUNC(DATE_SUB(CURRENT_DATE(), INTERVAL 7 DAY), WEEK)\n)\n\n-- üéØ COMPREHENSIVE PAGE PERFORMANCE RESULTS\nSELECT \n  ppa.page,\n  ppa.total_clicks,\n  ppa.total_impressions,\n  ROUND(ppa.avg_ctr, 2) as avg_ctr,\n  ROUND(ppa.avg_position, 1) as avg_position,\n  ppa.total_keywords,\n  ppa.tracked_keywords_count,\n  ppa.tracked_clicks,\n  ppa.tracked_impressions,\n  ppa.days_since_last_data,\n  ppa.page_type,\n  \n  -- üìà TREND DATA\n  COALESCE(ROUND(lwc.clicks_change_percent, 1), 0) as clicks_change_percent,\n  COALESCE(ROUND(lwc.position_change, 1), 0) as position_change,\n  \n  -- üö® ENHANCED ALERT CLASSIFICATION\n  CASE \n    WHEN COALESCE(lwc.clicks_change_percent, 0) < -30 AND ppa.tracked_keywords_count > 0 THEN 'CRITICAL_TRACKED_DROP'\n    WHEN COALESCE(lwc.clicks_change_percent, 0) < -20 AND ppa.tracked_keywords_count > 0 THEN 'TRACKED_TRAFFIC_DROP'\n    WHEN COALESCE(lwc.clicks_change_percent, 0) < -20 THEN 'TRAFFIC_DROP'\n    WHEN COALESCE(lwc.clicks_change_percent, 0) > 30 AND ppa.tracked_keywords_count > 0 THEN 'TRACKED_TRAFFIC_SURGE'\n    WHEN COALESCE(lwc.clicks_change_percent, 0) > 20 THEN 'TRAFFIC_SURGE'\n    WHEN ppa.avg_ctr < {{ $(\"Master Configuration\").first().json.priority_scoring.low_ctr_threshold }} AND ppa.total_impressions > 1000 AND ppa.tracked_keywords_count > 0 THEN 'TRACKED_LOW_CTR'\n    WHEN ppa.avg_ctr < {{ $(\"Master Configuration\").first().json.priority_scoring.low_ctr_threshold }} AND ppa.total_impressions > 1000 THEN 'LOW_CTR_OPPORTUNITY'\n    WHEN ppa.avg_position > {{ $(\"Master Configuration\").first().json.priority_scoring.medium_position_threshold }} AND ppa.total_impressions > 500 AND ppa.tracked_keywords_count > 0 THEN 'TRACKED_LOW_POSITION'\n    WHEN ppa.avg_position > {{ $(\"Master Configuration\").first().json.priority_scoring.medium_position_threshold }} AND ppa.total_impressions > 500 THEN 'POSITION_OPPORTUNITY'\n    WHEN ppa.days_since_last_data > 7 THEN 'POTENTIAL_INDEXING_ISSUE'\n    WHEN ppa.tracked_keywords_count > 0 THEN 'TRACKED_NORMAL'\n    ELSE 'NORMAL'\n  END as alert_type,\n  \n  -- üèÜ PAGE PRIORITY SCORING\n  CASE \n    WHEN ppa.tracked_keywords_count > 0 AND ppa.total_impressions > {{ $(\"Master Configuration\").first().json.priority_scoring.high_impressions_threshold }} THEN 'CRITICAL'\n    WHEN ppa.tracked_keywords_count > 0 AND ppa.total_impressions > {{ $(\"Master Configuration\").first().json.priority_scoring.medium_impressions_threshold }} THEN 'HIGH'\n    WHEN ppa.tracked_keywords_count > 0 THEN 'MEDIUM'\n    WHEN ppa.total_impressions > {{ $(\"Master Configuration\").first().json.priority_scoring.high_impressions_threshold }} THEN 'MEDIUM'\n    ELSE 'LOW'\n  END as page_priority,\n  \n  -- üìÖ METADATA\n  '{{ $(\"Master Configuration\").first().json.date_settings.analysis_date }}' as analysis_date\n  \nFROM page_performance_analysis ppa\nLEFT JOIN latest_week_comparison lwc ON ppa.page = lwc.page\nORDER BY \n  CASE WHEN ppa.tracked_keywords_count > 0 THEN 0 ELSE 1 END,  -- Tracked pages first\n  ppa.total_clicks DESC\nLIMIT {{ $(\"Master Configuration\").first().json.batch_settings.performance_batch_size }}"
      },
      "id": "performance_analysis",
      "name": "Performance Analysis",
      "type": "n8n-nodes-base.googleBigQuery",
      "typeVersion": 1,
      "position": [1120, 400],
      "notes": "üìä ENHANCED PERFORMANCE ANALYSIS\n\nüéØ TRACKED KEYWORD AWARENESS:\n‚Ä¢ Identifies pages with tracked keywords\n‚Ä¢ Separates tracked vs organic performance\n‚Ä¢ Calculates tracked keyword metrics\n‚Ä¢ Prioritizes tracked content\n\nüö® ADVANCED ALERT SYSTEM:\n‚Ä¢ CRITICAL_TRACKED_DROP: >30% drop on tracked pages\n‚Ä¢ TRACKED_TRAFFIC_DROP: Traffic loss on tracked keywords\n‚Ä¢ TRACKED_LOW_CTR: CTR issues on tracked content\n‚Ä¢ TRACKED_LOW_POSITION: Position problems\n‚Ä¢ POTENTIAL_INDEXING_ISSUE: Technical problems\n\nüèÜ PAGE PRIORITIES:\n‚Ä¢ CRITICAL: High-volume tracked pages\n‚Ä¢ HIGH: Medium-volume tracked pages\n‚Ä¢ MEDIUM: Low-volume tracked or high organic\n‚Ä¢ LOW: Standard organic pages\n\nüìà COMPREHENSIVE METRICS:\n‚Ä¢ Traffic trends & changes\n‚Ä¢ Position movements\n‚Ä¢ CTR performance\n‚Ä¢ Keyword distribution"
    },
    {
      "parameters": {
        "authentication": "serviceAccount",
        "projectId": "={{ $env.GCP_PROJECT_ID }}",
        "query": "-- üîç INDEXING & CRAWL STATUS ANALYSIS\n-- Monitors Google Search Console indexing health\n\nWITH recent_crawl_data AS (\n  SELECT \n    page_url,\n    last_crawl_time,\n    coverage_state,\n    is_excluded,\n    crawl_anomaly_reason,\n    DATE_DIFF(CURRENT_DATE(), DATE(last_crawl_time), DAY) as days_since_crawl,\n    ROW_NUMBER() OVER (ORDER BY last_crawl_time DESC) as crawl_recency_rank\n  FROM `{{ $env.GCP_PROJECT_ID }}.searchconsole.crawl_stats`\n  WHERE \n    DATE(last_crawl_time) >= DATE_SUB('{{ $(\"Master Configuration\").first().json.date_settings.end_date }}', INTERVAL 14 DAY)\n    AND DATE(last_crawl_time) <= '{{ $(\"Master Configuration\").first().json.date_settings.end_date }}'\n  HAVING crawl_recency_rank <= {{ $(\"Master Configuration\").first().json.batch_settings.indexing_batch_size }}\n),\n\nindexing_status_analysis AS (\n  SELECT \n    page_url,\n    last_crawl_time,\n    coverage_state,\n    is_excluded,\n    crawl_anomaly_reason,\n    days_since_crawl,\n    \n    -- üîç INDEXING STATUS CLASSIFICATION\n    CASE \n      WHEN is_excluded = FALSE AND coverage_state = 'Valid' AND days_since_crawl <= 3 THEN 'NEWLY_INDEXED'\n      WHEN is_excluded = FALSE AND coverage_state = 'Valid' THEN 'INDEXED_NORMAL'\n      WHEN is_excluded = TRUE OR coverage_state IN ('Error', 'Excluded') THEN 'DEINDEXED'\n      WHEN days_since_crawl > 14 THEN 'CRAWL_DELAYED'\n      WHEN days_since_crawl > 7 THEN 'CRAWL_ISSUE'\n      WHEN coverage_state = 'Pending' THEN 'PENDING_INDEX'\n      ELSE 'UNKNOWN_STATUS'\n    END as indexing_status,\n    \n    -- üö® ISSUE SEVERITY\n    CASE \n      WHEN is_excluded = TRUE AND coverage_state = 'Error' THEN 'CRITICAL'\n      WHEN days_since_crawl > 14 THEN 'HIGH'\n      WHEN coverage_state = 'Excluded' THEN 'MEDIUM'\n      WHEN days_since_crawl > 7 THEN 'MEDIUM'\n      ELSE 'LOW'\n    END as issue_severity,\n    \n    -- üîß RECOMMENDED ACTION\n    CASE \n      WHEN is_excluded = TRUE AND coverage_state = 'Error' THEN 'FIX_TECHNICAL_ERROR'\n      WHEN days_since_crawl > 14 THEN 'REQUEST_REINDEX'\n      WHEN coverage_state = 'Excluded' AND crawl_anomaly_reason IS NOT NULL THEN 'REVIEW_EXCLUSION_REASON'\n      WHEN days_since_crawl > 7 THEN 'MONITOR_CRAWLING'\n      WHEN coverage_state = 'Pending' THEN 'WAIT_FOR_INDEX'\n      ELSE 'NO_ACTION_NEEDED'\n    END as recommended_action\n  FROM recent_crawl_data\n),\n\nindexing_summary_stats AS (\n  SELECT \n    indexing_status,\n    issue_severity,\n    COUNT(*) as page_count,\n    AVG(days_since_crawl) as avg_days_since_crawl,\n    MAX(days_since_crawl) as max_days_since_crawl\n  FROM indexing_status_analysis\n  GROUP BY indexing_status, issue_severity\n)\n\n-- üéØ INDEXING ANALYSIS RESULTS\nSELECT \n  isa.page_url,\n  isa.last_crawl_time,\n  isa.coverage_state,\n  isa.is_excluded,\n  isa.crawl_anomaly_reason,\n  isa.days_since_crawl,\n  isa.indexing_status,\n  isa.issue_severity,\n  isa.recommended_action,\n  \n  -- üìä CONTEXT FROM SUMMARY\n  iss.page_count as similar_issues_count,\n  ROUND(iss.avg_days_since_crawl, 1) as avg_days_for_status,\n  \n  -- üìÖ METADATA\n  '{{ $(\"Master Configuration\").first().json.date_settings.analysis_date }}' as analysis_date\n  \nFROM indexing_status_analysis isa\nLEFT JOIN indexing_summary_stats iss \n  ON isa.indexing_status = iss.indexing_status \n  AND isa.issue_severity = iss.issue_severity\nWHERE isa.indexing_status != 'INDEXED_NORMAL'  -- Focus on issues only\nORDER BY \n  CASE isa.issue_severity \n    WHEN 'CRITICAL' THEN 1 \n    WHEN 'HIGH' THEN 2 \n    WHEN 'MEDIUM' THEN 3 \n    ELSE 4 \n  END,\n  isa.days_since_crawl DESC\nLIMIT {{ $(\"Master Configuration\").first().json.batch_settings.indexing_batch_size }}"
      },
      "id": "indexing_analysis",
      "name": "Indexing Analysis",
      "type": "n8n-nodes-base.googleBigQuery",
      "typeVersion": 1,
      "position": [1120, 600],
      "notes": "üîç INDEXING STATUS ANALYSIS\n\nüìä STATUS CLASSIFICATIONS:\n‚Ä¢ NEWLY_INDEXED: Recently added (‚â§3 days)\n‚Ä¢ INDEXED_NORMAL: Healthy indexing\n‚Ä¢ DEINDEXED: Removed from index\n‚Ä¢ CRAWL_DELAYED: >14 days since crawl\n‚Ä¢ CRAWL_ISSUE: >7 days since crawl\n‚Ä¢ PENDING_INDEX: Awaiting indexing\n‚Ä¢ UNKNOWN_STATUS: Unclear status\n\nüö® SEVERITY LEVELS:\n‚Ä¢ CRITICAL: Technical errors, exclusions\n‚Ä¢ HIGH: Long crawl delays (>14 days)\n‚Ä¢ MEDIUM: Exclusions, medium delays\n‚Ä¢ LOW: Minor issues\n\nüîß ACTIONABLE RECOMMENDATIONS:\n‚Ä¢ FIX_TECHNICAL_ERROR: Address errors\n‚Ä¢ REQUEST_REINDEX: Submit for reindexing\n‚Ä¢ REVIEW_EXCLUSION_REASON: Check exclusions\n‚Ä¢ MONITOR_CRAWLING: Watch crawl frequency\n‚Ä¢ WAIT_FOR_INDEX: Allow processing time\n‚Ä¢ NO_ACTION_NEEDED: Status is normal\n\nüìà CONTEXT METRICS:\n‚Ä¢ Similar issues count\n‚Ä¢ Average days for status\n‚Ä¢ Severity-based prioritization"
    },
    {
      "parameters": {
        "jsCode": "// üéØ COMPREHENSIVE DATA INTEGRATION\n// Master processor combining all SEO analysis data\n\ntry {\n  // üìä EXTRACT ALL DATA SOURCES\n  const masterConfig = $(\"Master Configuration\").first().json;\n  const trackedKeywords = $(\"Process Keywords\").first().json.tracked_keywords || [];\n  const keywordAnalysis = $input.all().filter(item => item.json.query && item.json.priority_score) || [];\n  const performanceData = $input.all().filter(item => item.json.page && item.json.total_clicks !== undefined) || [];\n  const indexingData = $input.all().filter(item => item.json.page_url && item.json.indexing_status) || [];\n  \n  // üõ°Ô∏è DATA VALIDATION\n  const validKeywordAnalysis = Array.isArray(keywordAnalysis) ? \n    keywordAnalysis.map(item => item.json) : \n    (keywordAnalysis.length > 0 ? [keywordAnalysis[0].json] : []);\n    \n  const validPerformanceData = Array.isArray(performanceData) ? \n    performanceData.map(item => item.json) : \n    (performanceData.length > 0 ? [performanceData[0].json] : []);\n    \n  const validIndexingData = Array.isArray(indexingData) ? \n    indexingData.map(item => item.json) : \n    (indexingData.length > 0 ? [indexingData[0].json] : []);\n  \n  // üéØ ENHANCE KEYWORDS WITH MANUAL PRIORITIES\n  const enhancedKeywords = validKeywordAnalysis.map(keyword => {\n    const trackedKeyword = trackedKeywords.find(tk => \n      tk.keyword === keyword.query?.toLowerCase()\n    );\n    \n    return {\n      ...keyword,\n      is_manually_tracked: !!trackedKeyword,\n      manual_priority: trackedKeyword?.priority || null,\n      business_value: trackedKeyword?.business_value || null,\n      target_position: trackedKeyword?.target_position || null,\n      notes: trackedKeyword?.notes || null,\n      // üéØ ENHANCED PRIORITY SCORING\n      enhanced_priority_score: keyword.priority_score + \n        (trackedKeyword?.business_value || 0) * 2, // Boost for business value\n      meets_target: trackedKeyword?.target_position ? \n        keyword.avg_position <= trackedKeyword.target_position : null\n    };\n  });\n  \n  // üìä COMPREHENSIVE ANALYSIS SUMMARY\n  const comprehensiveAnalysis = {\n    // üìÖ METADATA\n    analysis_date: masterConfig.date_settings.analysis_date,\n    processing_timestamp: new Date().toISOString(),\n    workflow_version: masterConfig.execution_metadata.workflow_version,\n    \n    // üéØ KEYWORD ANALYSIS\n    keyword_analysis: {\n      keywords: enhancedKeywords,\n      summary: {\n        total_analyzed: enhancedKeywords.length,\n        manually_tracked: enhancedKeywords.filter(k => k.is_manually_tracked).length,\n        meeting_targets: enhancedKeywords.filter(k => k.meets_target === true).length,\n        critical_priority: enhancedKeywords.filter(k => k.final_priority === 'CRITICAL').length,\n        high_priority: enhancedKeywords.filter(k => k.final_priority === 'HIGH').length,\n        avg_priority_score: enhancedKeywords.length > 0 ? \n          enhancedKeywords.reduce((sum, k) => sum + (k.priority_score || 0), 0) / enhancedKeywords.length : 0\n      }\n    },\n    \n    // üìä PERFORMANCE ANALYSIS\n    performance_analysis: {\n      pages: validPerformanceData,\n      summary: {\n        total_pages: validPerformanceData.length,\n        tracked_pages: validPerformanceData.filter(p => p.page_type === 'TRACKED_PAGE').length,\n        critical_pages: validPerformanceData.filter(p => p.page_priority === 'CRITICAL').length,\n        total_clicks: validPerformanceData.reduce((sum, p) => sum + (parseInt(p.total_clicks) || 0), 0),\n        total_impressions: validPerformanceData.reduce((sum, p) => sum + (parseInt(p.total_impressions) || 0), 0),\n        avg_ctr: validPerformanceData.length > 0 ? \n          validPerformanceData.reduce((sum, p) => sum + (parseFloat(p.avg_ctr) || 0), 0) / validPerformanceData.length : 0\n      }\n    },\n    \n    // üîç INDEXING ANALYSIS\n    indexing_analysis: {\n      issues: validIndexingData,\n      summary: {\n        total_issues: validIndexingData.length,\n        critical_issues: validIndexingData.filter(i => i.issue_severity === 'CRITICAL').length,\n        high_issues: validIndexingData.filter(i => i.issue_severity === 'HIGH').length,\n        deindexed_pages: validIndexingData.filter(i => i.indexing_status === 'DEINDEXED').length,\n        crawl_delays: validIndexingData.filter(i => i.indexing_status === 'CRAWL_DELAYED').length\n      }\n    },\n    \n    // üéØ STRATEGIC OPPORTUNITIES\n    strategic_opportunities: {\n      top_keyword_opportunities: enhancedKeywords\n        .filter(k => k.opportunity_type !== 'STANDARD_TRACKING')\n        .sort((a, b) => (b.enhanced_priority_score || 0) - (a.enhanced_priority_score || 0))\n        .slice(0, 10),\n      critical_page_issues: validPerformanceData\n        .filter(p => p.alert_type.includes('CRITICAL') || p.alert_type.includes('DROP'))\n        .sort((a, b) => parseInt(b.total_clicks) - parseInt(a.total_clicks))\n        .slice(0, 5),\n      indexing_priorities: validIndexingData\n        .filter(i => i.issue_severity === 'CRITICAL' || i.issue_severity === 'HIGH')\n        .sort((a, b) => {\n          const severityOrder = {'CRITICAL': 1, 'HIGH': 2, 'MEDIUM': 3, 'LOW': 4};\n          return severityOrder[a.issue_severity] - severityOrder[b.issue_severity];\n        })\n        .slice(0, 5)\n    },\n    \n    // üìä ALERT SUMMARY\n    alert_summary: {\n      keyword_alerts: {\n        declining_keywords: enhancedKeywords.filter(k => k.opportunity_type === 'DECLINING_KEYWORD').length,\n        position_opportunities: enhancedKeywords.filter(k => k.opportunity_type === 'POSITION_OPPORTUNITY').length,\n        ctr_opportunities: enhancedKeywords.filter(k => k.opportunity_type === 'CTR_OPPORTUNITY').length\n      },\n      performance_alerts: {\n        traffic_drops: validPerformanceData.filter(p => p.alert_type.includes('DROP')).length,\n        traffic_surges: validPerformanceData.filter(p => p.alert_type.includes('SURGE')).length,\n        low_ctr_issues: validPerformanceData.filter(p => p.alert_type.includes('LOW_CTR')).length\n      },\n      indexing_alerts: {\n        critical_issues: validIndexingData.filter(i => i.issue_severity === 'CRITICAL').length,\n        crawl_issues: validIndexingData.filter(i => i.indexing_status.includes('CRAWL')).length,\n        deindexing_issues: validIndexingData.filter(i => i.indexing_status === 'DEINDEXED').length\n      }\n    },\n    \n    // ‚úÖ PROCESSING STATUS\n    processing_status: {\n      success: true,\n      all_analyses_complete: true,\n      keyword_analysis_complete: validKeywordAnalysis.length > 0,\n      performance_analysis_complete: validPerformanceData.length > 0,\n      indexing_analysis_complete: validIndexingData.length > 0,\n      total_data_points: enhancedKeywords.length + validPerformanceData.length + validIndexingData.length,\n      has_critical_issues: validIndexingData.some(i => i.issue_severity === 'CRITICAL') || \n                          validPerformanceData.some(p => p.alert_type.includes('CRITICAL'))\n    }\n  };\n  \n  console.log(`‚úÖ Comprehensive Analysis Complete:`);\n  console.log(`üéØ Keywords: ${enhancedKeywords.length} (${comprehensiveAnalysis.keyword_analysis.summary.manually_tracked} tracked)`);\n  console.log(`üìä Pages: ${validPerformanceData.length} (${comprehensiveAnalysis.performance_analysis.summary.tracked_pages} tracked)`);\n  console.log(`üîç Indexing Issues: ${validIndexingData.length} (${comprehensiveAnalysis.indexing_analysis.summary.critical_issues} critical)`);\n  console.log(`üèÜ Critical Keywords: ${comprehensiveAnalysis.keyword_analysis.summary.critical_priority}`);\n  console.log(`üö® Critical Pages: ${comprehensiveAnalysis.performance_analysis.summary.critical_pages}`);\n  \n  return { json: comprehensiveAnalysis };\n  \n} catch (error) {\n  console.error('‚ùå Comprehensive Analysis Error:', error.message);\n  \n  return {\n    json: {\n      analysis_date: new Date().toISOString().split('T')[0],\n      processing_timestamp: new Date().toISOString(),\n      keyword_analysis: { keywords: [], summary: {} },\n      performance_analysis: { pages: [], summary: {} },\n      indexing_analysis: { issues: [], summary: {} },\n      strategic_opportunities: { top_keyword_opportunities: [], critical_page_issues: [], indexing_priorities: [] },\n      alert_summary: { keyword_alerts: {}, performance_alerts: {}, indexing_alerts: {} },\n      processing_status: {\n        success: false,\n        all_analyses_complete: false,\n        error: error.message,\n        total_data_points: 0,\n        has_critical_issues: false\n      }\n    }\n  };\n}"
      ],
      "id": "comprehensive_integration",
      "name": "Comprehensive Data Integration",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [1340, 400],
      "notes": "üéØ COMPREHENSIVE INTEGRATION\n\nüìä DATA FUSION:\n‚Ä¢ Combines keyword priority analysis\n‚Ä¢ Integrates performance metrics\n‚Ä¢ Includes indexing status\n‚Ä¢ Merges manual tracking data\n‚Ä¢ Enhances with business values\n\nüèÜ ENHANCED SCORING:\n‚Ä¢ Boosts manually tracked keywords\n‚Ä¢ Incorporates business value weights\n‚Ä¢ Validates target achievement\n‚Ä¢ Calculates comprehensive priorities\n\nüéØ STRATEGIC INSIGHTS:\n‚Ä¢ Top optimization opportunities\n‚Ä¢ Critical issue identification\n‚Ä¢ Performance trend analysis\n‚Ä¢ Indexing health monitoring\n\nüìà COMPREHENSIVE METRICS:\n‚Ä¢ Cross-analysis summaries\n‚Ä¢ Alert aggregation\n‚Ä¢ Success indicators\n‚Ä¢ Quality assurance"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "leftValue": "={{ $json.processing_status.success }}",
              "rightValue": true,
              "operator": {
                "type": "boolean",
                "operation": "equal"
              }
            },
            {
              "leftValue": "={{ $json.processing_status.total_data_points }}",
              "rightValue": 0,
              "operator": {
                "type": "number",
                "operation": "gt"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "quality_check",
      "name": "Data Quality Check",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [1560, 400],
      "notes": "‚úÖ DATA QUALITY CHECK\n\nüéØ VALIDATION CRITERIA:\n‚Ä¢ Processing success = true\n‚Ä¢ Total data points > 0\n‚Ä¢ All analyses complete\n‚Ä¢ No critical errors\n\nüîÄ FLOW CONTROL:\n‚Ä¢ TRUE: Continue to AI analysis\n‚Ä¢ FALSE: Send error notification\n\nüõ°Ô∏è QUALITY ASSURANCE:\n‚Ä¢ Prevents empty analysis\n‚Ä¢ Ensures data integrity\n‚Ä¢ Validates completeness\n‚Ä¢ Maintains report quality"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.anthropic.com/v1/messages",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "headers": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "body": {
          "parameters": [
            {
              "name": "model",
              "value": "claude-3-5-sonnet-20241022"
            },
            {
              "name": "max_tokens",
              "value": 4000
            },
            {
              "name": "messages",
              "value": "=[{\n  \"role\": \"user\",\n  \"content\": `You are an expert SEO strategist providing comprehensive analysis and actionable recommendations. Analyze this complete SEO dataset with keyword prioritization, performance metrics, and indexing status.\n\nüéØ COMPREHENSIVE ANALYSIS OVERVIEW:\n‚Ä¢ Analysis Date: ${$json.analysis_date}\n‚Ä¢ Workflow Version: ${$json.workflow_version}\n‚Ä¢ Total Data Points: ${$json.processing_status.total_data_points}\n‚Ä¢ Critical Issues Present: ${$json.processing_status.has_critical_issues}\n\nüìä KEYWORD ANALYSIS SUMMARY:\n‚Ä¢ Total Keywords: ${$json.keyword_analysis.summary.total_analyzed}\n‚Ä¢ Manually Tracked: ${$json.keyword_analysis.summary.manually_tracked}\n‚Ä¢ Meeting Targets: ${$json.keyword_analysis.summary.meeting_targets}\n‚Ä¢ Critical Priority: ${$json.keyword_analysis.summary.critical_priority}\n‚Ä¢ High Priority: ${$json.keyword_analysis.summary.high_priority}\n‚Ä¢ Avg Priority Score: ${$json.keyword_analysis.summary.avg_priority_score.toFixed(1)}/100\n\nüìà PERFORMANCE ANALYSIS SUMMARY:\n‚Ä¢ Total Pages: ${$json.performance_analysis.summary.total_pages}\n‚Ä¢ Tracked Pages: ${$json.performance_analysis.summary.tracked_pages}\n‚Ä¢ Critical Pages: ${$json.performance_analysis.summary.critical_pages}\n‚Ä¢ Total Clicks: ${$json.performance_analysis.summary.total_clicks.toLocaleString()}\n‚Ä¢ Total Impressions: ${$json.performance_analysis.summary.total_impressions.toLocaleString()}\n‚Ä¢ Average CTR: ${$json.performance_analysis.summary.avg_ctr.toFixed(2)}%\n\nüîç INDEXING ANALYSIS SUMMARY:\n‚Ä¢ Total Issues: ${$json.indexing_analysis.summary.total_issues}\n‚Ä¢ Critical Issues: ${$json.indexing_analysis.summary.critical_issues}\n‚Ä¢ High Severity: ${$json.indexing_analysis.summary.high_issues}\n‚Ä¢ Deindexed Pages: ${$json.indexing_analysis.summary.deindexed_pages}\n‚Ä¢ Crawl Delays: ${$json.indexing_analysis.summary.crawl_delays}\n\nüö® ALERT SUMMARY:\n**Keyword Alerts:**\n‚Ä¢ Declining Keywords: ${$json.alert_summary.keyword_alerts.declining_keywords}\n‚Ä¢ Position Opportunities: ${$json.alert_summary.keyword_alerts.position_opportunities}\n‚Ä¢ CTR Opportunities: ${$json.alert_summary.keyword_alerts.ctr_opportunities}\n\n**Performance Alerts:**\n‚Ä¢ Traffic Drops: ${$json.alert_summary.performance_alerts.traffic_drops}\n‚Ä¢ Traffic Surges: ${$json.alert_summary.performance_alerts.traffic_surges}\n‚Ä¢ Low CTR Issues: ${$json.alert_summary.performance_alerts.low_ctr_issues}\n\n**Indexing Alerts:**\n‚Ä¢ Critical Issues: ${$json.alert_summary.indexing_alerts.critical_issues}\n‚Ä¢ Crawl Issues: ${$json.alert_summary.indexing_alerts.crawl_issues}\n‚Ä¢ Deindexing Issues: ${$json.alert_summary.indexing_alerts.deindexing_issues}\n\nüèÜ TOP STRATEGIC OPPORTUNITIES:\n${JSON.stringify($json.strategic_opportunities.top_keyword_opportunities.slice(0, 5), null, 2)}\n\nüö® CRITICAL PAGE ISSUES:\n${JSON.stringify($json.strategic_opportunities.critical_page_issues.slice(0, 3), null, 2)}\n\n‚ö†Ô∏è INDEXING PRIORITIES:\n${JSON.stringify($json.strategic_opportunities.indexing_priorities.slice(0, 3), null, 2)}\n\nProvide analysis in this EXACT format:\n\nüéØ **SEO WATCHDOG COMPREHENSIVE REPORT - ${$json.analysis_date}**\n\n**üìä EXECUTIVE DASHBOARD:**\n‚Ä¢ Keywords Analyzed: ${$json.keyword_analysis.summary.total_analyzed} (${$json.keyword_analysis.summary.manually_tracked} tracked)\n‚Ä¢ Pages Monitored: ${$json.performance_analysis.summary.total_pages} (${$json.performance_analysis.summary.tracked_pages} with tracked keywords)\n‚Ä¢ Technical Issues: ${$json.indexing_analysis.summary.total_issues} (${$json.indexing_analysis.summary.critical_issues} critical)\n‚Ä¢ Overall Health: [GREEN/YELLOW/RED based on critical issues]\n‚Ä¢ Priority Focus: [Main area needing attention]\n\n**üö® CRITICAL ACTIONS REQUIRED:**\n[List 3-5 most urgent issues requiring immediate attention within 24-48 hours]\n\n**üèÜ HIGH-IMPACT OPPORTUNITIES:**\n‚Ä¢ **Quick Wins (Next 7 Days):**\n  - [Specific keyword/page optimizations with expected impact]\n  - [Technical fixes with immediate benefits]\n  \n‚Ä¢ **Strategic Wins (Next 30 Days):**\n  - [Position improvement opportunities]\n  - [CTR optimization targets]\n  - [Content enhancement priorities]\n\n**üìà KEYWORD STRATEGY ANALYSIS:**\n‚Ä¢ **Top Performers:** [Best performing tracked keywords]\n‚Ä¢ **Underperformers:** [Tracked keywords missing targets]\n‚Ä¢ **Opportunities:** [Keywords with optimization potential]\n‚Ä¢ **Declining:** [Keywords losing performance that need attention]\n\n**üìä TECHNICAL HEALTH ASSESSMENT:**\n‚Ä¢ **Indexing Status:** [Overall indexing health]\n‚Ä¢ **Crawl Issues:** [Critical crawling problems]\n‚Ä¢ **Urgent Fixes:** [Technical issues requiring immediate action]\n‚Ä¢ **Monitoring:** [Areas needing ongoing attention]\n\n**üéØ STRATEGIC ROADMAP:**\n\n**Week 1 Priorities:**\n1. [Most critical action with expected outcome]\n2. [Second priority with timeline]\n3. [Third priority with resources needed]\n\n**Month 1 Goals:**\n‚Ä¢ [Strategic objective 1 with success metrics]\n‚Ä¢ [Strategic objective 2 with timeline]\n‚Ä¢ [Strategic objective 3 with resource requirements]\n\n**Quarter Goals:**\n‚Ä¢ [Long-term strategic initiative]\n‚Ä¢ [Growth opportunity development]\n‚Ä¢ [Competitive advantage building]\n\n**üìä SUCCESS METRICS TO TRACK:**\n‚Ä¢ **Keyword Targets:** [Specific position/CTR goals]\n‚Ä¢ **Traffic Goals:** [Expected traffic improvements]\n‚Ä¢ **Technical KPIs:** [Indexing and crawl health metrics]\n‚Ä¢ **Timeline:** [Expected results timeframe]\n\n**üîÑ TRACKING ADJUSTMENTS:**\n‚Ä¢ **Add to Priority:** [New keywords/pages to monitor]\n‚Ä¢ **Increase Focus:** [Areas needing more attention]\n‚Ä¢ **Reduce Priority:** [Stable areas requiring less monitoring]\n\n**üìà EXPECTED IMPACT:**\n‚Ä¢ **Traffic Increase:** [Estimated percentage improvement]\n‚Ä¢ **Ranking Improvements:** [Expected position gains]\n‚Ä¢ **Technical Health:** [Expected infrastructure improvements]\n‚Ä¢ **ROI Timeline:** [When to expect results]\n\nFocus on specific, actionable recommendations with clear timelines, expected outcomes, and success metrics. Prioritize based on impact potential and resource requirements.`\n}]"
            }
          ]
        }
      },
      "id": "claude_comprehensive_analysis",
      "name": "Claude AI - Comprehensive Analysis",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4,
      "position": [1780, 300],
      "notes": "ü§ñ CLAUDE AI COMPREHENSIVE ANALYSIS\n\nüéØ EXPERT ANALYSIS:\n‚Ä¢ Complete SEO strategy review\n‚Ä¢ Comprehensive data interpretation\n‚Ä¢ Strategic roadmap development\n‚Ä¢ Actionable recommendations\n\nüìä ANALYSIS SCOPE:\n‚Ä¢ Keyword prioritization strategy\n‚Ä¢ Performance optimization plan\n‚Ä¢ Technical health assessment\n‚Ä¢ Competitive positioning\n\nüèÜ STRATEGIC OUTPUTS:\n‚Ä¢ Executive dashboard summary\n‚Ä¢ Critical action priorities\n‚Ä¢ High-impact opportunities\n‚Ä¢ Technical health assessment\n‚Ä¢ Strategic roadmap\n‚Ä¢ Success metrics\n‚Ä¢ Tracking adjustments\n‚Ä¢ Expected impact projections\n\nüîß OPTIMIZATION:\n‚Ä¢ Maximum token allocation\n‚Ä¢ Comprehensive context\n‚Ä¢ Strategic focus\n‚Ä¢ Actionable insights"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://api.telegram.org/bot{{ $env.TELEGRAM_BOT_TOKEN }}/sendMessage",
        "headers": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "body": {
          "parameters": [
            {
              "name": "chat_id",
              "value": "={{ $env.TELEGRAM_CHAT_ID }}"
            },
            {
              "name": "text",
              "value": "üö® **SEO WATCHDOG - ANALYSIS ERROR**\\n\\n‚ö†Ô∏è **Issue:** {{ $json.processing_status.error || 'Data quality check failed' }}\\n\\nüìä **Status:**\\n‚Ä¢ Processing Success: {{ $json.processing_status.success }}\\n‚Ä¢ Data Points: {{ $json.processing_status.total_data_points }}\\n‚Ä¢ Analyses Complete: {{ $json.processing_status.all_analyses_complete }}\\n\\nüîß **Checks:**\\n‚Ä¢ Keyword Analysis: {{ $json.processing_status.keyword_analysis_complete }}\\n‚Ä¢ Performance Analysis: {{ $json.processing_status.performance_analysis_complete }}\\n‚Ä¢ Indexing Analysis: {{ $json.processing_status.indexing_analysis_complete }}\\n\\nüìã **Next Steps:**\\n‚Ä¢ Verify BigQuery connections\\n‚Ä¢ Check Google Sheets access\\n‚Ä¢ Validate environment variables\\n‚Ä¢ Review data availability\\n\\n‚è∞ **Time:** {{ $json.processing_timestamp || new Date().toISOString() }}\\n\\nüîÑ **Next Attempt:** Tomorrow at 9 AM"
            },
            {
              "name": "parse_mode",
              "value": "Markdown"
            }
          ]
        }
      },
      "id": "error_notification",
      "name": "Error Notification",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4,
      "position": [1780, 500],
      "notes": "üö® COMPREHENSIVE ERROR NOTIFICATION\n\nüéØ ERROR DETAILS:\n‚Ä¢ Processing status information\n‚Ä¢ Data quality indicators\n‚Ä¢ Analysis completion status\n‚Ä¢ Detailed failure context\n\nüìä DIAGNOSTIC INFO:\n‚Ä¢ Individual analysis success\n‚Ä¢ Data point counts\n‚Ä¢ Connection status\n‚Ä¢ Configuration validation\n\nüîß TROUBLESHOOTING:\n‚Ä¢ BigQuery connectivity\n‚Ä¢ Google Sheets access\n‚Ä¢ Environment variables\n‚Ä¢ Data availability checks\n\nüì± NOTIFICATION:\n‚Ä¢ Immediate error alert\n‚Ä¢ Diagnostic information\n‚Ä¢ Troubleshooting steps\n‚Ä¢ Next execution schedule"
    },
    {
      "parameters": {
        "jsCode": "// üì± COMPREHENSIVE REPORT FORMATTING\n// Advanced formatting for complete SEO analysis reports\n\nconst response = $json.content[0].text;\nconst comprehensiveData = $(\"Comprehensive Data Integration\").first().json;\n\n// üéØ Enhanced telegram formatting\nconst formatForTelegram = {\n  report: response,\n  timestamp: new Date().toISOString(),\n  date_readable: new Date().toLocaleDateString('en-US', {\n    weekday: 'long',\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric'\n  }),\n  chat_id: $env.TELEGRAM_CHAT_ID,\n  parse_mode: 'Markdown',\n  disable_web_page_preview: true,\n  disable_notification: false,\n  \n  // üéØ COMPREHENSIVE METADATA\n  comprehensive_metadata: {\n    report_type: 'COMPREHENSIVE_SEO_ANALYSIS',\n    workflow_version: comprehensiveData.workflow_version,\n    analysis_date: comprehensiveData.analysis_date,\n    total_data_points: comprehensiveData.processing_status.total_data_points,\n    has_critical_issues: comprehensiveData.processing_status.has_critical_issues,\n    \n    // üìä ANALYSIS COVERAGE\n    analysis_coverage: {\n      keywords_analyzed: comprehensiveData.keyword_analysis.summary.total_analyzed,\n      pages_analyzed: comprehensiveData.performance_analysis.summary.total_pages,\n      indexing_issues: comprehensiveData.indexing_analysis.summary.total_issues,\n      manual_tracking: comprehensiveData.keyword_analysis.summary.manually_tracked > 0\n    },\n    \n    // üéØ PRIORITY INDICATORS\n    priority_indicators: {\n      critical_keywords: comprehensiveData.keyword_analysis.summary.critical_priority,\n      critical_pages: comprehensiveData.performance_analysis.summary.critical_pages,\n      critical_indexing: comprehensiveData.indexing_analysis.summary.critical_issues,\n      total_alerts: Object.values(comprehensiveData.alert_summary.keyword_alerts).reduce((a,b) => a+b, 0) +\n                   Object.values(comprehensiveData.alert_summary.performance_alerts).reduce((a,b) => a+b, 0) +\n                   Object.values(comprehensiveData.alert_summary.indexing_alerts).reduce((a,b) => a+b, 0)\n    },\n    \n    // üìà REPORT QUALITY\n    report_quality: {\n      character_count: response.length,\n      word_count: response.split(' ').length,\n      completeness_score: (\n        (comprehensiveData.processing_status.keyword_analysis_complete ? 1 : 0) +\n        (comprehensiveData.processing_status.performance_analysis_complete ? 1 : 0) +\n        (comprehensiveData.processing_status.indexing_analysis_complete ? 1 : 0)\n      ) / 3\n    }\n  }\n};\n\nreturn { json: formatForTelegram };"
      },
      "id": "format_comprehensive_report",
      "name": "Format Comprehensive Report",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [2000, 300],
      "notes": "üì± COMPREHENSIVE REPORT FORMATTER\n\nüéØ ADVANCED FORMATTING:\n‚Ä¢ Complete analysis context\n‚Ä¢ Priority indicators\n‚Ä¢ Coverage metrics\n‚Ä¢ Quality assessment\n\nüìä METADATA ENHANCEMENT:\n‚Ä¢ Analysis coverage tracking\n‚Ä¢ Priority level indicators\n‚Ä¢ Alert count aggregation\n‚Ä¢ Completeness scoring\n\nüîß TELEGRAM OPTIMIZATION:\n‚Ä¢ Markdown formatting\n‚Ä¢ Mobile-friendly layout\n‚Ä¢ Critical issue highlighting\n‚Ä¢ Strategic structure\n\nüìà QUALITY METRICS:\n‚Ä¢ Content length analysis\n‚Ä¢ Completeness assessment\n‚Ä¢ Coverage validation\n‚Ä¢ Priority tracking"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://api.telegram.org/bot{{ $env.TELEGRAM_BOT_TOKEN }}/sendMessage",
        "headers": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "body": {
          "parameters": [
            {
              "name": "chat_id",
              "value": "={{ $json.chat_id }}"
            },
            {
              "name": "text",
              "value": "={{ $json.report }}"
            },
            {
              "name": "parse_mode",
              "value": "={{ $json.parse_mode }}"
            },
            {
              "name": "disable_web_page_preview",
              "value": "={{ $json.disable_web_page_preview }}"
            },
            {
              "name": "disable_notification",
              "value": "={{ $json.disable_notification }}"
            }
          ]
        }
      },
      "id": "send_comprehensive_report",
      "name": "Send Comprehensive Report",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4,
      "position": [2220, 300],
      "notes": "üì± COMPREHENSIVE REPORT DELIVERY\n\nüéØ STRATEGIC DELIVERY:\n‚Ä¢ Complete SEO analysis\n‚Ä¢ Priority-focused insights\n‚Ä¢ Actionable recommendations\n‚Ä¢ Strategic roadmap\n\nüìä FEATURES:\n‚Ä¢ Rich markdown formatting\n‚Ä¢ Mobile optimization\n‚Ä¢ Critical issue highlighting\n‚Ä¢ Strategic structure\n\nüîß RELIABILITY:\n‚Ä¢ Error handling\n‚Ä¢ Delivery confirmation\n‚Ä¢ Status tracking\n‚Ä¢ Quality assurance"
    },
    {
      "parameters": {
        "operation": "appendOrUpdate",
        "authentication": "serviceAccount",
        "documentId": "={{ $env.KEYWORD_RESULTS_SHEET_ID }}",
        "sheetName": "Analysis Results",
        "range": "A:P",
        "columns": {
          "mappingMode": "autoMapInputData",
          "value": {},
          "matchingColumns": [],
          "schema": [
            {
              "id": "analysis_date",
              "displayName": "Date",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "query",
              "displayName": "Keyword",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "page",
              "displayName": "Page",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false
            },
            {
              "id": "total_clicks",
              "displayName": "Clicks",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": false
            },
            {
              "id": "total_impressions",
              "displayName": "Impressions",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": false
            },
            {
              "id": "avg_ctr",
              "displayName": "CTR",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": false
            },
            {
              "id": "avg_position",
              "displayName": "Position",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": false
            },
            {
              "id": "priority_score",
              "displayName": "Priority Score",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": false
            },
            {
              "id": "enhanced_priority_score",
              "displayName": "Enhanced Score",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": false
            },
            {
              "id": "final_priority",
              "displayName": "Priority",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false
            },
            {
              "id": "opportunity_type",
              "displayName": "Opportunity",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false
            },
            {
              "id": "keyword_health",
              "displayName": "Health",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false
            },
            {
              "id": "is_manually_tracked",
              "displayName": "Tracked",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": false
            },
            {
              "id": "manual_priority",
              "displayName": "Manual Priority",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false
            },
            {
              "id": "business_value",
              "displayName": "Business Value",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": false
            },
            {
              "id": "meets_target",
              "displayName": "Meets Target",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": false
            }
          ]
        },
        "options": {}
      },
      "id": "save_comprehensive_results",
      "name": "Save Comprehensive Results",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4,
      "position": [2000, 500],
      "notes": "üíæ SAVE COMPREHENSIVE RESULTS\n\nüìä COMPREHENSIVE DATA STORAGE:\n‚Ä¢ Complete keyword analysis\n‚Ä¢ Priority scoring data\n‚Ä¢ Business value tracking\n‚Ä¢ Target achievement status\n‚Ä¢ Manual tracking indicators\n\nüéØ SHEET STRUCTURE:\n‚Ä¢ All analysis metrics\n‚Ä¢ Enhanced priority scores\n‚Ä¢ Opportunity classifications\n‚Ä¢ Health indicators\n‚Ä¢ Tracking status\n‚Ä¢ Business context\n\nüìà BENEFITS:\n‚Ä¢ Historical trend analysis\n‚Ä¢ Performance tracking\n‚Ä¢ Strategic planning\n‚Ä¢ ROI measurement\n‚Ä¢ Progress monitoring"
    },
    {
      "parameters": {
        "jsCode": "// üìä COMPREHENSIVE WORKFLOW RESULT LOGGER\n// Master logging for complete SEO Watchdog workflow\n\nconst success = $json.ok;\nconst messageId = $json.message_id;\nconst errorDescription = $json.description;\nconst comprehensiveData = $(\"Comprehensive Data Integration\").first().json;\n\nconst timestamp = new Date().toISOString();\nconst readableTime = new Date().toLocaleString('en-US', {\n  timeZone: 'UTC',\n  weekday: 'long',\n  year: 'numeric',\n  month: 'long',\n  day: 'numeric',\n  hour: '2-digit',\n  minute: '2-digit',\n  second: '2-digit'\n});\n\n// üéØ Comprehensive workflow logging\nif (success) {\n  console.log(`‚úÖ COMPREHENSIVE SEO ANALYSIS DELIVERED`);\n  console.log(`üì± Telegram Message ID: ${messageId}`);\n  console.log(`‚è∞ Delivery Time: ${readableTime}`);\n  console.log(`üéØ Analysis Type: COMPREHENSIVE`);\n  console.log(`üèÜ Report Status: DELIVERED`);\n  console.log(`üìä Workflow: COMPLETE`);\n  \n  // üìä Analysis summary\n  console.log(`\\nüìã ANALYSIS SUMMARY:`);\n  console.log(`üéØ Keywords: ${comprehensiveData.keyword_analysis.summary.total_analyzed} (${comprehensiveData.keyword_analysis.summary.manually_tracked} tracked)`);\n  console.log(`üìä Pages: ${comprehensiveData.performance_analysis.summary.total_pages} (${comprehensiveData.performance_analysis.summary.tracked_pages} tracked)`);\n  console.log(`üîç Issues: ${comprehensiveData.indexing_analysis.summary.total_issues} (${comprehensiveData.indexing_analysis.summary.critical_issues} critical)`);\n  console.log(`üèÜ Critical Keywords: ${comprehensiveData.keyword_analysis.summary.critical_priority}`);\n  console.log(`üö® Critical Pages: ${comprehensiveData.performance_analysis.summary.critical_pages}`);\n  \n} else {\n  console.log(`‚ùå COMPREHENSIVE SEO ANALYSIS FAILED`);\n  console.log(`‚ö†Ô∏è Error: ${errorDescription}`);\n  console.log(`‚è∞ Failed At: ${readableTime}`);\n  console.log(`üéØ Analysis Type: COMPREHENSIVE`);\n  console.log(`üèÜ Report Status: FAILED`);\n}\n\n// üîç Comprehensive workflow summary\nconsole.log(`\\nüìã WORKFLOW SUMMARY:`);\nconsole.log(`üîÑ Process: Complete SEO Watchdog Analysis`);\nconsole.log(`üìà Next Execution: Tomorrow at 9 AM`);\nconsole.log(`üéØ Features: Keyword Priority + Performance + Indexing`);\nconsole.log(`üìä Integration: Google Sheets + BigQuery + AI Analysis`);\nconsole.log(`üöÄ Version: ${comprehensiveData.workflow_version || '3.0-complete'}`);\n\nreturn {\n  json: {\n    success: success,\n    message_id: messageId,\n    error_description: errorDescription,\n    timestamp: timestamp,\n    readable_time: readableTime,\n    analysis_type: 'COMPREHENSIVE',\n    workflow_status: success ? 'COMPREHENSIVE_COMPLETED' : 'COMPREHENSIVE_FAILED',\n    next_execution: 'Tomorrow at 9 AM',\n    comprehensive_analysis: true,\n    \n    // üìä ANALYSIS STATISTICS\n    analysis_stats: {\n      keywords_analyzed: comprehensiveData.keyword_analysis.summary.total_analyzed,\n      pages_analyzed: comprehensiveData.performance_analysis.summary.total_pages,\n      indexing_issues: comprehensiveData.indexing_analysis.summary.total_issues,\n      critical_keywords: comprehensiveData.keyword_analysis.summary.critical_priority,\n      critical_pages: comprehensiveData.performance_analysis.summary.critical_pages,\n      critical_indexing: comprehensiveData.indexing_analysis.summary.critical_issues,\n      manually_tracked: comprehensiveData.keyword_analysis.summary.manually_tracked,\n      total_clicks: comprehensiveData.performance_analysis.summary.total_clicks,\n      total_impressions: comprehensiveData.performance_analysis.summary.total_impressions\n    },\n    \n    summary: {\n      process: 'SEO Watchdog Comprehensive Analysis',\n      status: success ? 'SUCCESS' : 'FAILED',\n      delivery_method: 'Telegram',\n      completion_time: readableTime,\n      analysis_scope: 'Complete SEO Suite',\n      workflow_version: comprehensiveData.workflow_version || '3.0-complete'\n    }\n  }\n};"
      },
      "id": "log_comprehensive_result",
      "name": "Log Comprehensive Result",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [2440, 300],
      "notes": "üìä COMPREHENSIVE RESULT LOGGING\n\nüéØ MASTER LOGGING:\n‚Ä¢ Complete workflow status\n‚Ä¢ Comprehensive analysis metrics\n‚Ä¢ All analysis statistics\n‚Ä¢ Performance indicators\n‚Ä¢ Success confirmation\n\nüìã DETAILED METRICS:\n‚Ä¢ Keywords analyzed count\n‚Ä¢ Pages monitored count\n‚Ä¢ Indexing issues found\n‚Ä¢ Critical items identified\n‚Ä¢ Manual tracking status\n‚Ä¢ Traffic metrics\n\nüîç MONITORING DATA:\n‚Ä¢ Workflow health tracking\n‚Ä¢ Delivery confirmation\n‚Ä¢ Performance analysis\n‚Ä¢ Quality indicators\n‚Ä¢ Success rates\n\nüìä COMPREHENSIVE SUMMARY:\n‚Ä¢ Process completion status\n‚Ä¢ Next execution schedule\n‚Ä¢ Feature utilization\n‚Ä¢ Integration success\n‚Ä¢ Version tracking"
    }
  ],
  "connections": {
    "Daily Scheduler": {
      "main": [
        [
          {
            "node": "Master Configuration",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Master Configuration": {
      "main": [
        [
          {
            "node": "Load Tracked Keywords",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Load Tracked Keywords": {
      "main": [
        [
          {
            "node": "Process Keywords",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Process Keywords": {
      "main": [
        [
          {
            "node": "Keyword Priority Analysis",
            "type": "main",
            "index": 0
          },
          {
            "node": "Performance Analysis",
            "type": "main",
            "index": 0
          },
          {
            "node": "Indexing Analysis",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Keyword Priority Analysis": {
      "main": [
        [
          {
            "node": "Comprehensive Data Integration",
            "type": "main",
            "index": 0
          },
          {
            "node": "Save Comprehensive Results",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Performance Analysis": {
      "main": [
        [
          {
            "node": "Comprehensive Data Integration",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Indexing Analysis": {
      "main": [
        [
          {
            "node": "Comprehensive Data Integration",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Comprehensive Data Integration": {
      "main": [
        [
          {
            "node": "Data Quality Check",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Data Quality Check": {
      "main": [
        [
          {
            "node": "Claude AI - Comprehensive Analysis",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Error Notification",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Claude AI - Comprehensive Analysis": {
      "main": [
        [
          {
            "node": "Format Comprehensive Report",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format Comprehensive Report": {
      "main": [
        [
          {
            "node": "Send Comprehensive Report",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send Comprehensive Report": {
      "main": [
        [
          {
            "node": "Log Comprehensive Result",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1",
    "saveManualExecutions": true,
    "callerPolicy": "workflowsFromSameOwner",
    "timeouts": {
      "default": 45000,
      "max": 120000
    },
    "errorWorkflow": {
      "enabled": false
    }
  },
  "staticData": null,
  "tags": [
    {
      "createdAt": "2024-12-07T00:00:00.000Z",
      "updatedAt": "2024-12-07T00:00:00.000Z",
      "id": "comprehensive",
      "name": "Comprehensive"
    },
    {
      "createdAt": "2024-12-07T00:00:00.000Z",
      "updatedAt": "2024-12-07T00:00:00.000Z",
      "id": "unified",
      "name": "Unified"
    },
    {
      "createdAt": "2024-12-07T00:00:00.000Z",
      "updatedAt": "2024-12-07T00:00:00.000Z",
      "id": "complete",
      "name": "Complete"
    }
  ],
  "triggerCount": 1,
  "updatedAt": "2024-12-07T00:00:00.000Z",
  "versionId": "3.0-complete"
}